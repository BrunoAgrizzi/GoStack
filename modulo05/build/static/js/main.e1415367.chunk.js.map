{"version":3,"sources":["services/api.js","pages/Main/styles.js","pages/Main/index.js","pages/Repository/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["api","axios","create","baseURL","Container","styled","div","Form","form","rotate","keyframes","SubmitButton","button","attrs","props","type","disabled","loading","css","List","ul","Main","state","newRepo","repositories","handleInputChance","e","setState","target","value","handleSubmit","a","preventDefault","get","response","data","name","full_name","localStorage","getItem","this","JSON","parse","_","prevState","setItem","stringify","onSubmit","placeholder","onChange","color","size","map","repository","key","to","encodeURIComponent","Component","Repository","issues","match","repoName","decodeURIComponent","params","Promise","all","per_page","Routes","path","exact","component","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1415367.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled, { keyframes, css } from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 700px;\n  background: #fff;\n  border-radius: 4px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n  padding: 30px;\n  margin: 80px auto;\n\n  h1 {\n    font-size: 20px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    svg {\n      margin-right: 10px;\n    }\n  }\n`;\nexport const Form = styled.form`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n\n  input {\n    flex: 1;\n    border: 1px solid #eee;\n    padding: 10px 15 px;\n    border-radius: 4px;\n    font-size: 26px;\n  }\n`;\nconst rotate = keyframes`\n  from{\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const SubmitButton = styled.button.attrs(props => ({\n  type: 'submit',\n  disabled: props.loading,\n}))`\n  background: #7159c1;\n  border: 0;\n  padding: 0 15px;\n  margin-left: 10px;\n  border-radius: 4px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &[disabled] {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  ${props =>\n    props.loading &&\n    css`\n      svg {\n        animation: ${rotate} 2s linear infinite;\n      }\n    `}\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 30px;\n\n  li {\n    padding: 15px 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    aling-items: center;\n\n    & + li {\n      border-top: 1px solid #eee;\n    }\n\n    a {\n      color: #7159c1;\n      text-decorate: none;\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\nimport { Container, Form, SubmitButton, List } from './styles';\n\nexport default class Main extends Component {\n  state = {\n    newRepo: '',\n    repositories: [],\n    loading: false,\n  };\n\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n    if (repositories) {\n      this.setState({ repositories: JSON.parse(repositories) });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleInputChance = e => {\n    this.setState({\n      newRepo: e.target.value,\n    });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n\n    const { newRepo, repositories } = this.state;\n\n    const response = await api.get(`/repos/${newRepo}`);\n\n    const data = {\n      name: response.data.full_name,\n    };\n\n    this.setState({\n      repositories: [...repositories, data],\n      newRepo: '',\n      loading: false,\n    });\n  };\n\n  render() {\n    const { newRepo, repositories, loading } = this.state;\n    return (\n      <Container>\n        <h1>\n          <FaGithubAlt />\n          Repositórios\n        </h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Adicionar repositório\"\n            value={newRepo}\n            onChange={this.handleInputChance}\n          />\n          <SubmitButton loading={loading}>\n            {loading ? (\n              <FaSpinner color=\"#fff\" size={14} />\n            ) : (\n              <FaPlus color=\"#fff\" size={14} />\n            )}\n          </SubmitButton>\n        </Form>\n\n        <List>\n          {repositories.map(repository => (\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\n                Detalhes\n              </Link>\n            </li>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\n\n// import { Container } from './styles';\n\nexport default class Repository extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        repository: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [repository, issues] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: 'open',\n          per_page: 5,\n        },\n      }),\n    ]);\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    });\n  }\n\n  render() {\n    const { repository, issues, loading } = this.state;\n    return <h1>Repository</h1>;\n  }\n}\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport React from 'react';\n\nimport Main from './pages/Main';\nimport Repository from './pages/Repository';\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/repository/:repository\" component={Repository} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    min-height: 100%;\n  }\n\n  body {\n    background: #7159c1;\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  body, input, button {\n    color: #222;\n    font-size: 14px;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\n\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}